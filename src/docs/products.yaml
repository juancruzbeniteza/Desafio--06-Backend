openapi: 3.0.0
info:
  title: Product API
  description: CRUD operations for managing products
  version: 1.0.0
paths:
  /api/products/:
    post:
      summary: Create a new product
      tags: [Products]
      description: Create a new product with the provided data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the product
                photo:
                  type: string
                  description: The URL of the product photo
                price:
                  type: number
                  description: The price of the product
                stock:
                  type: number
                  description: The available stock of the product
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request, invalid input data
        '500':
          description: Internal server error
    get:
      summary: Get a list of products
      tags: [Products]
      description: Retrieve a list of products based on the provided filter and pagination parameters
      parameters:
        - in: query
          name: filter
          schema:
            type: object
            description: Object containing filter parameters
        - in: query
          name: sortAndPaginate
          schema:
            type: object
            description: Object containing sort and pagination parameters
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '400':
          description: Bad request, invalid input data
        '500':
          description: Internal server error
  /api/products/{id}:
    put:
      summary: Update a product
      tags: [Products]
      description: Update a product with the provided data
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: The ID of the product to update
        - in: body
          name: data
          description: The data to update the product with
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
                description: The new title of the product
              photo:
                type: string
                description: The new URL of the product photo
              price:
                type: number
                description: The new price of the product
              stock:
                type: number
                description: The new available stock of the product
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request, invalid input data
        '404':
          description: Product not found
        '500':
          description: Internal server error
    delete:
      summary: Delete a product
      tags: [Products]
      description: Delete a product with the provided ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: The ID of the product to delete
      responses:
        '204':
          description: Product deleted successfully
        '404':
          description: Product not found
        '500':
          description: Internal server error
components:
  schemas:
    Product:
      type: object
      required:
        - title
        - price
        - stock
      properties:
        title:
          type: string
          description: The title of the product
        photo:
          type: string
          default: "https://shopnguyenlieumypham.com/wp-content/uploads/no-image/product-456x456.jpg"
          description: The URL of the product photo
        price:
          type: number
          description: The price of the product
        stock:
          type: number
          description: The available stock of the product
        createdAt:
          type: string
          format: date-time
          description: The datetime when the product was created
        updatedAt:
          type: string
          format: date-time
          description: The datetime when the product was last updated